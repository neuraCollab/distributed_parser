Вот список полезных команд для работы с Kubernetes, разделённых по категориям:

---

### **1. Основные команды**

- **Просмотреть информацию о кластере:**
  ```bash
  kubectl cluster-info
  ```

- **Просмотреть узлы (nodes):**
  ```bash
  kubectl get nodes
  ```

- **Проверить состояние подов:**
  ```bash
  kubectl get pods
  ```

- **Применить манифесты:**
  ```bash
  kubectl apply -f <filename.yaml>
  ```

- **Удалить ресурс:**
  ```bash
  kubectl delete -f <filename.yaml>
  ```

- **Удалить конкретный под:**
  ```bash
  kubectl delete pod <pod-name>
  ```

---

### **2. Работа с подами (Pods)**

- **Просмотреть все поды во всех namespaces:**
  ```bash
  kubectl get pods -A
  ```

- **Получить подробную информацию о поде:**
  ```bash
  kubectl describe pod <pod-name>
  ```

- **Посмотреть логи пода:**
  ```bash
  kubectl logs <pod-name>
  ```

- **Посмотреть логи конкретного контейнера в поде:**
  ```bash
  kubectl logs <pod-name> -c <container-name>
  ```

- **Подключиться к поду (терминал внутри контейнера):**
  ```bash
  kubectl exec -it <pod-name> -- /bin/bash
  ```

---

### **3. Работа с деплойментами (Deployments)**

- **Просмотреть деплойменты:**
  ```bash
  kubectl get deployments
  ```

- **Просмотреть статус деплоймента:**
  ```bash
  kubectl rollout status deployment <deployment-name>
  ```

- **Обновить деплоймент:**
  ```bash
  kubectl apply -f <deployment.yaml>
  ```

- **Перезапустить деплоймент:**
  ```bash
  kubectl rollout restart deployment <deployment-name>
  ```

- **Откатить деплоймент:**
  ```bash
  kubectl rollout undo deployment <deployment-name>
  ```

---

### **4. Работа с сервисами (Services)**

- **Просмотреть все сервисы:**
  ```bash
  kubectl get services
  ```

- **Получить подробную информацию о сервисе:**
  ```bash
  kubectl describe service <service-name>
  ```

---

### **5. Работа с namespaces**

- **Просмотреть все namespaces:**
  ```bash
  kubectl get namespaces
  ```

- **Переключиться на другой namespace:**
  ```bash
  kubectl config set-context --current --namespace=<namespace-name>
  ```

- **Удалить namespace:**
  ```bash
  kubectl delete namespace <namespace-name>
  ```

---

### **6. Работа с конфигурацией**

- **Просмотреть текущий контекст:**
  ```bash
  kubectl config current-context
  ```

- **Список всех контекстов:**
  ```bash
  kubectl config get-contexts
  ```

- **Переключиться на другой контекст:**
  ```bash
  kubectl config use-context <context-name>
  ```

---

### **7. Полезные команды для отладки**

- **Посмотреть события в кластере:**
  ```bash
  kubectl get events
  ```

- **Получить логи API-сервера:**
  ```bash
  kubectl logs -n kube-system <api-server-pod-name>
  ```

- **Проверить доступность ресурсов:**
  ```bash
  kubectl top nodes
  kubectl top pods
  ```

- **Трассировать запрос к API:**
  ```bash
  kubectl get pods --v=8
  ```

---

### **8. Удаление ресурсов**

- **Удалить все поды в namespace:**
  ```bash
  kubectl delete pods --all -n <namespace>
  ```

- **Удалить все ресурсы из манифеста:**
  ```bash
  kubectl delete -f <filename.yaml>
  ```

---

### **9. Работа с хранилищем**

- **Просмотреть все PersistentVolume (PV):**
  ```bash
  kubectl get pv
  ```

- **Просмотреть все PersistentVolumeClaim (PVC):**
  ```bash
  kubectl get pvc
  ```

- **Удалить PVC:**
  ```bash
  kubectl delete pvc <pvc-name>
  ```

---

### **10. Полезные команды для Dashboard**

- **Запустить прокси для Dashboard:**
  ```bash
  kubectl proxy
  ```

- **Посмотреть адрес Dashboard:**
  ```bash
  echo "http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/"
  ```

---

Эти команды помогут вам работать с Kubernetes в большинстве повседневных задач. Если у вас есть конкретный сценарий, для которого нужен набор команд, дайте знать!